@using GitDeployHub.Web.Engine.Processes
@model Hub

@{
    ViewBag.Title = "CV+AR - Git Deploy";
}
 <div id="popup-wrapper" style="background-color: #ccc;">
            <div class="popContentWrap">
            <div id="popUpContent"></div>
                <a id="close-btn" href="#">Close</a>
                </div>
</div>
<div>
    @if (Model.Queue.Count > 0)
    {
        <h2>Active</h2>
        <table>
            <thead>
                <tr>
                    <th>Instance</th>
                    <th>Status</th>
                    <th>Started</th>
                    <th>Parameters</th>
                    <th>Log</th>
                </tr>
            </thead>
            <tbody>

                @foreach (var process in Model.Queue.Reverse())
                {
                    <tr class="@(process.Succeeded ? "succeeded" : "failed")">
                        <td>@process.Instance.Name</td>
                        <td>@process.Status</td>
                        <td>@process.Started.ToString("s")<br/>(@DateTimeFormatter.TimeAgo(process.Started))</td>
                        <td>
                            <a href="#" class="opnPop">Show</a>
                            <div class="popData">
                                <ul>
                                    @foreach (var param in process.Parameters)
                                    {
                                        <li>
                                            <pre>@param.Key: @param.Value</pre>
                                        </li>
                                    }
                                </ul>
                            </div>
                        </td>
                        <td><a href="#" class="opnPop">@GitDeployHub.Web.StringExt.Truncate(process.FullLog, 20)</a>
                            <div class="popData">
                                <pre>@process.FullLog</pre>
                            </div>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    }


    <h2>Production instances</h2>
    @if (!Model.Instances.Any())
    {
        <div>Empty</div>
    }
    else
    {
                    
        <table>
            <thead>
                <tr>
                    <th>Instance</th>
                    <th>Treeish</th>
                    <th>Preview</th>
                    <th></th>
                    <th></th>
                    <th>Tags</th>
                    <th>Completed</th>
                    <th>Parameters</th>
                    <th>Result</th>
                    <th>Log</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var instance in Model.Instances.OrderBy(i => i.Name))
                {
                    <tr class="@(instance.LastDeployment != null ? (instance.LastDeployment.Succeeded ? "succeeded" : "failed") : "unknown")">
                        <td>@instance.Name</td>
                        <td>@instance.Treeish</td>
                        <td>
                            <div title="Files that will change on next deploy. Click 'Update Preview' to refresh this list">
                                @if (instance.FilesChangedToTreeish.Length < 1)
                                {
                                    <span>no changes</span>
                                }
                                else
                                {
                                    <a href="#" class="opnPop">@GitDeployHub.Web.StringExt.Truncate(string.Join("\n", instance.FilesChangedToTreeish), 20)</a>
                                    <div class="popData">
                                        <pre>@string.Join("\n", instance.FilesChangedToTreeish)</pre>
                                    </div>
                                }
                            </div>
                        </td>
                        <td>
                            @Html.ActionLink("ChangeLog", "ChangeLog", "Instance", new { id = instance.Name }, new { title = "ChangeLog of currently deployed version" })
                        </td>
                        <td>
                            <form method="POST" action="@Url.Action("Start", "Deployment", new { id = instance.Name, source = "dashboard", dry = true })">
                                <input type="submit" value="Update Preview" />
                            </form>
                            <form method="POST" action="@Url.Action("Start", "Deployment", new { id = instance.Name, source = "dashboard" })">
                                <input type="submit" value="Deploy Now" />
                            </form>
                            @if (instance.HasSmokeTest && !(instance.LastDeployment != null && !instance.LastDeployment.Succeeded))
                            {
                                <form method="POST" action="@Url.Action("SmokeTest", "Deployment", new { id = instance.Name, source = "dashboard" })">
                                    <input type="submit" value="Smoke Test" />
                                </form>
                            }
                        </td>
                        <td>
                            <ul class="instance-tags">
                                @foreach (var tag in instance.Tags)
                                {
                                    <li>@tag</li>
                                }
                            </ul>
                        </td>
                        @{
                                var lastProcess = instance.LastSmokeTest != null && (instance.LastDeployment == null || instance.LastDeployment.Succeeded) ? instance.LastSmokeTest : (BaseProcess)instance.LastDeployment;
                        }
                        @if (lastProcess != null)
                        {
                            <td>@lastProcess.Completed.ToString("s")<br/>(@DateTimeFormatter.TimeAgo(lastProcess.Completed))</td>
                            <td>
                                <a href="#" class="opnPop">show</a>
                                <div class="popData">
                                    <ul>
                                        @foreach (var param in lastProcess.Parameters)
                                        {
                                            <li>
                                                <pre>@param.Key: @param.Value</pre>
                                            </li>
                                        }
                                    </ul>
                                </div>
                            </td>
                            <td>
                                <pre>@((lastProcess.Succeeded ? "OK" : "ERROR: " + lastProcess.Exception.Message) + (lastProcess is SmokeTest ? "\n(smoke tested)" : ""))</pre>
                            </td>
                            <td>
                                <a href="#" class="opnPop">@GitDeployHub.Web.StringExt.Truncate(lastProcess.FullLog, 20)</a>
                                <div class="popData">
                                    <pre>@lastProcess.FullLog</pre>
                                </div>

                            </td>
                        }
                        else
                        {
                            <td colspan="2">No recent deployments</td>
                            <td colspan="3"><a href="#" class="opnPop">Show POST link</a>
                                <div class="popData">
                                    <pre>@Url.Action("Start", "Deployment", new { id = instance.Name, source = "sourceName" }, "http")</pre>
                                </div>
                            </td>
                        }
                    </tr>
                }
            </tbody>
        </table>
    }

    <h2>Deploy History</h2>
    @if (Model.ProcessHistory.Count == 0)
    {
        <div>Empty</div>
    }
    else
    {
                    
        <table>
            <thead>
                <tr>
                    <th>Instance</th>
                    <th>Status</th>
                    <th>Completed</th>
                    <th>Parameters</th>
                    <th>Result</th>
                    <th>Log</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var process in Model.ProcessHistory.Reverse())
                {
                    string p;
                    <tr class="@(process.Succeeded ? "succeeded" : "failed") @(process.Parameters.TryGetValue("dry", out p)?"dry":null)">
                        <td>@process.Instance.Name</td>
                        <td>@process.Status</td>
                        <td>@process.Completed.ToString("s")<br/>(@DateTimeFormatter.TimeAgo(process.Completed))</td>
                        <td>
                            <a href="#" class="opnPop">show</a>
                            <div class="popData">
                                <ul>
                                    @foreach (var param in process.Parameters)
                                    {
                                        <li>
                                            <pre>@param.Key: @param.Value</pre>
                                        </li>
                                    }
                                </ul>
                            </div>
                        </td>
                        <td>
                            <pre>@(process.Succeeded ? "OK" : "ERROR: " + process.Exception.Message)</pre>
                        </td>
                        <td>
                            <a href="#" class="opnPop">@GitDeployHub.Web.StringExt.Truncate(process.FullLog, 20)</a>
                            <div class="popData">
                                <pre>@process.FullLog</pre>
                            </div>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    }

    <script>
        setTimeout(function () {
            document.location = document.location.href;
        }, 300000);
    </script>
    <script type="text/javascript">
        $(function () {
            $('#popup-wrapper').modalPopLite({ openButton: '.opnPop', closeButton: '#close-btn' });
            $(".opnPop").bind("click", function () {
                $("#popUpContent").html($(this).parent().children(".popData").html());
                $(this).parent().children(".popData").hide();
                $('#popup-wrapper').show();
            });

        });
    </script>
</div>
